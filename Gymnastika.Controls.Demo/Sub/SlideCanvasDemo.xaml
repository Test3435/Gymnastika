<Window x:Class="Gymnastika.Controls.Demo.Sub.SlideCanvasDemo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Gymnastika.Controls;assembly=Gymnastika.Controls"
        Title="SlideCanvasDemo" Height="300" Width="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel>
            <TextBlock x:Name="positionTop" Text="{Binding Path=(Canvas.Top), ElementName=stackPanel}" />
            <TextBlock x:Name="positionLeft" Text="{Binding Path=(Canvas.Left), ElementName=stackPanel}" />
            <TextBlock Text="{Binding CurrentVelocity, ElementName=slideCanvas}" />
        </StackPanel>
        <controls:SlideCanvas x:Name="slideCanvas" Grid.Row="1" Width="500" Height="400" Cursor="Hand" Orientation="Vertical" HorizontalAlignment="Stretch">
            <!--<Button Width="80" Height="50" Margin="5" Content="1" />
                <Button Width="80" Height="50" Margin="5" Content="2" />
                <Button Width="80" Height="50" Margin="5" Content="3" />
                <Button Width="80" Height="50" Margin="5" Content="4" />
                <Button Width="80" Height="50" Margin="5" Content="5" />
                <Button Width="80" Height="50" Margin="5" Content="6" />
                <Button Width="80" Height="50" Margin="5" Content="7" />
                <Button Width="80" Height="50" Margin="5" Content="8" />
                <Button Width="80" Height="50" Margin="5" Content="9" />
                <Button Width="80" Height="50" Margin="5" Content="10" />
                <Button Width="80" Height="50" Margin="5" Content="11" />-->
            <StackPanel x:Name="stackPanel" Canvas.Top="0" Canvas.Left="0">
                <TextBlock VerticalAlignment="Top" TextWrapping="Wrap"><Run Text="Microsoft Silverlight is a web application framework, integrating multimedia, graphics, animations and interactivity into a single runtime environment. Initially released as a video streaming plugin, later versions brought additional interactivity features and support for .NET languages and development tools. The current version, 3.0, was released on July 9, 2009."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="It is compatible with multiple web browser products used on Microsoft Windows and Mac OS X operating systems. Mobile devices, starting with Windows Mobile 6 and Symbian (Series 60) phones, will likely become supported in 2010. A free software implementation named Moonlight, developed by Novell in cooperation with Microsoft, is available to bring compatible functionality to Linux."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="Silverlight provides a retained mode graphics system similar to Windows Presentation Foundation, and integrates multimedia, graphics, animations and interactivity into a single runtime environment. In Silverlight applications, user interfaces are declared in XAML and programmed using a subset of the .NET Framework. XAML can be used for marking up the vector graphics and animations. Textual content created with Silverlight is searchable and indexable by search engines as it is not compiled, but represented as text (XAML). Silverlight can also be used to create Windows Sidebar gadgets for Windows Vista."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="WMV, WMA and MP3 media content across all supported browsers without requiring Windows Media Player, the Windows Media Player ActiveX control or Windows Media browser plugins. Because Windows Media Video 9 is an implementation of the SMPTE VC-1 standard, Silverlight also supports VC-1 video, though still only in an ASF container format. Furthermore, the Software license agreement says VC-1 is only licensed for the &quot;personal and non-commercial use of a consumer&quot;. Silverlight, since version 3, supports the playback of H.264 video. Silverlight makes it possible to dynamically load XML content that can be manipulated through a DOM interface, a technique that is consistent with conventional Ajax techniques. Silverlight exposes a Downloader object which can be used to download content, like scripts, media assets or other data, as may be required by the application. With version 2, the programming logic can be written in any .NET language, including some derivatives of common dynamic programming languages like IronRuby and IronPython."/><LineBreak/><Run Text=""/></TextBlock>
                <TextBlock  VerticalAlignment="Top" TextWrapping="Wrap"><Run Text="Silverlight 3 was first announced at the IBC 2008 show in Amsterdam on September 12, 2008. It was unveiled at MIX09 in Las Vegas on March 18, 2009. A beta version was made available for download the same day. The final version was released July 9, 2009."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="Silverlight 3 includes an increased number of controls - including but not limited to DataGrid, TreeView, various layout panels, DataForm for forms-driven applications and DataPager for viewing paginated data. Some of these controls are from the Silverlight Toolkit. In addition, Silverlight 3 includes a navigation framework to let Silverlight applications use the hyperlinked navigation model as well as enabling deep-linking (linking directly to specific pages) within Silverlight applications."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="On the media front, Silverlight 3 supports AAC audio decoding as well as hardware-accelerated H.264 video decoding. Silverlight 3 also offers 1080p smooth streaming. The native multimedia pipeline is also programmatically exposed, so that other formats can also be supported by third-parties using managed code decoders. Silverlight 3 supports perspective 3D which enables 3D transformations of 2D elements. These transformations, as well as many 2D operations like stretches, alpha blending etc are hardware accelerated. Custom animations, including transforms and blends, can be created on Silverlight elements using HLSL to make use of pixel shaders. A Bitmap API is provided to let Silverlight 3 applications manipulate bitmaps. Silverlight now uses the GPU to accelerate the composition of Visual Trees (like WPF, Silverlight elements correspond to Visual elements, which, when coupled with the layout information, forms a Composition Tree or Visual Tree which is then rendered to form the final display; see WPF architecture). Visual trees can now be cached; this increases performance in cases like transforms, which creates lots of throw-away intermediate states, by not making the state transitions on the main Visual tree. Silverlight 3 now also supports ClearType text rendering."/><LineBreak/><Run Text="A Silverlight 3 application demonstrating local file access."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="UI elements in Silverlight 3 supports element-to-element binding - which allows one element to be bound to the state of another element, as well as a validation mechanism for data binding. Unlike Silverlight 2, which allowed the applications to save files only to the local isostorage, Silverlight 3 applications can save to any location on the file system via the system Save File dialog. However, the path where the file is saved will still be hidden from the Silverlight application. Any external assemblies used by Silverlight applications are cached too so that they need not be redownloaded for subsequent instantiations of the application."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="Silverlight 3 also includes a LocalConnection API to communicate (using a named pipe style model) among multiple running applications on the same machine, irrespective of the browser  and can monitor for network connectivity events. Silverlight 3 can optionally use Binary XML to communicate with WCF services."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="Silverlight 3 supports Out-of-Browser experiences, i.e., Silverlight applications can be installed to the system for offline access (provided the application manifest is designed to allow local installation) where they run outside the browser. They are launched using the Start Menu or desktop shortcuts, and run without the browser window. Applications can check whether they are running inside a browser or not. When running outside of a browser, HTML interop is disabled. In addition, access to the Function Keys is enabled. Locally installed Silverlight applications still run in a sandbox."/><LineBreak/><Run Text=""/><LineBreak/><Run Text="Installed Silverlight 3 applications automatically check for updates asynchronously on every launch and updates are automatically installed. Running instances of the applications are informed when updates are available."/></TextBlock>
            </StackPanel>
        </controls:SlideCanvas>
    </Grid>
</Window>
