<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="clr-namespace:Gymnastika.Controls.Behaviors;assembly=Gymnastika.Controls"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:controls="clr-namespace:Gymnastika.Controls;assembly=Gymnastika.Controls" 
        xmlns:v="clr-namespace:Gymnastika.Views"
        mc:Ignorable="d" x:Class="Gymnastika.Views.UserProfileView" x:Name="userProfileWindow" 
        behaviors:CloseWindowBehavior.CloseCondition="{Binding NotifyClose}" 
        ShowInTaskbar="False" WindowStartupLocation="CenterOwner" Width="500"
		ScrollViewer.VerticalScrollBarVisibility="Disabled" 
        WindowStyle="None" AllowsTransparency="True" Background="Transparent">

    <Window.Resources>
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
        <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#89D9A8" Offset="0"/>
            <GradientStop Color="#89D9A8" Offset="0.5"/>
            <GradientStop Color="White" Offset="0.51"/>
        </LinearGradientBrush>
        <Style x:Key="UserProfileTab" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="#F9F9F9"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <controls:SpreadTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
        <Style x:Key="UserProfileTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="35,8"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Path x:Name="LeftRounder" Opacity="0" Fill="White" Width="10" Height="20"  VerticalAlignment="Bottom" >
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Exclude">
                                        <CombinedGeometry.Geometry1>
                                            <RectangleGeometry Rect="0,10 10,10" />
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <EllipseGeometry Center="0,10" RadiusX="10" RadiusY="10" />
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>
                            <Path x:Name="RightRounder" Opacity="0" Grid.Column="3"  Fill="White" Width="10" Height="20"  VerticalAlignment="Bottom" >
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Exclude">
                                        <CombinedGeometry.Geometry1>
                                            <RectangleGeometry Rect="0,10 10,10" />
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <EllipseGeometry Center="10,10" RadiusX="10" RadiusY="10" />
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>
                            <Border Grid.Column="1" x:Name="Bd" Background="White" CornerRadius="10,10,0,0" Opacity="0"
								        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0"
								        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Grid.Column="1" HorizontalAlignment="Stretch" Width="Auto" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" Value="#89D9A8" />
                                <Setter Property="Opacity" TargetName="Bd" Value="1"/>
                                <Setter Property="Opacity" TargetName="LeftRounder" Value="1"/>
                                <Setter Property="Opacity" TargetName="RightRounder" Value="1"/>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsMouseOver" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Cursor" Value="Hand" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnWindowLoaded">
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="windowBorder" To="1">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="windowBorder" To="1">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="OnWindowClosing" Completed="OnWindowClosingStoryboard_Completed">
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="windowBorder" To="0">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseIn" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="windowBorder" To="0">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseIn" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <ControlTemplate x:Key="BackButtonTemplate" TargetType="{x:Type Button}">
            <Grid>
                <ContentPresenter/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform Y="2"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="v:UserProfileView.RoutedClosing">
            <BeginStoryboard x:Name="OnWindowClosing_BeginStoryboard" Storyboard="{StaticResource OnWindowClosing}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="OnWindowLoaded_BeginStoryboard" Storyboard="{StaticResource OnWindowLoaded}"/>
        </EventTrigger>
    </Window.Triggers>
    <StackPanel HorizontalAlignment="Center" Width="360" VerticalAlignment="Center">
        <Border x:Name="windowBorder" Background="{StaticResource WindowBackgroundBrush}" CornerRadius="45,0,45,45" RenderTransformOrigin="0.5,0.5">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>

            <Grid x:Name="grid" Margin="0">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding BackCommand}" Margin="0,8,8,0" VerticalAlignment="Top" HorizontalAlignment="Right" Template="{DynamicResource BackButtonTemplate}" RenderTransformOrigin="0.5,0.5" ToolTip="返回">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                    <Image Source="/Gymnastika.Infrastructure;component/Images/back.png" Height="28" d:LayoutOverrides="Height" Width="28"/>
                </Button>
                <TabControl SelectedIndex="{Binding InitialTabIndex}" Style="{DynamicResource UserProfileTab}" ItemContainerStyle="{DynamicResource UserProfileTabItemStyle}" Background="White" Grid.Row="1" 
                              Margin="0,0,0,40" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Text="登录" FontSize="15" MouseEnter="HeaderTextBlock_MouseEnter" MouseLeave="HeaderTextBlock_MouseLeave" />
                        </TabItem.Header>
                        <v:LogOnView DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type v:IUserProfileView}}}" />
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Text="创建新账户" FontSize="15" MouseEnter="HeaderTextBlock_MouseEnter" MouseLeave="HeaderTextBlock_MouseLeave"/>
                        </TabItem.Header>
                        <v:CreateNewUserView DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type v:IUserProfileView}}}" />
                    </TabItem>
                </TabControl>
            </Grid>
        </Border>
    </StackPanel>
</Window>
