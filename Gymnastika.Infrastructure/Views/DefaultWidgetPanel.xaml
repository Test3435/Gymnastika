<UserControl x:Class="Gymnastika.Views.DefaultWidgetPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="http://schemas.microsoft.com/surface/2008"
             xmlns:controls="clr-namespace:Gymnastika.Controls;assembly=Gymnastika.Controls"
             xmlns:widgets="clr-namespace:Gymnastika.Widgets;assembly=Gymnastika.Widgets" 
			 mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="WidgetPanelStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#B2EBE9E9" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true" CornerRadius="10" Background="{TemplateBinding Background}">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnWidgetBoxOpen">
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="widgetBox" To="1">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="00:00:00.5000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="widgetBox" To="1">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="OnWidgetBoxClose">
            <DoubleAnimation Duration="00:00:00.3000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="widgetBox" To="0">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseIn" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="00:00:00.3000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="widgetBox" To="0">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseIn" Oscillations="2" Springiness="5"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Style x:Key="WidgetContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="MaxWidth" Value="70" />
            <Setter Property="Height" Value="70" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="SelectedLayer" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed" >
                                <Border.Background>
                                    <ImageBrush ImageSource="/Gymnastika.Widgets;component/Images/widget_selected.png"/>
                                </Border.Background>
                            </Border>
                            <Border x:Name="MouseOverLayer" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed">
                                <Border.Background>
                                    <ImageBrush ImageSource="/Gymnastika.Widgets;component/Images/widget_mouseover.png" />
                                </Border.Background>
                            </Border>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="MouseOverLayer" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="MouseOverLayer" Property="Visibility" Value="Collapsed" />
                                <Setter Property="Visibility" TargetName="SelectedLayer" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="WidgetBoxItemTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Grid.RowSpan="1" Margin="0" Source="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" />
                <TextBlock HorizontalAlignment="Center" Height="Auto" Grid.Row="1" TextWrapping="Wrap" Text="{Binding DisplayName}" VerticalAlignment="Center" Width="Auto"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Background="{x:Null}">
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto" />
    		<RowDefinition />
    	</Grid.RowDefinitions>
        <Ellipse Height="94" Width="157" HorizontalAlignment="Right" Margin="0,-47,-79,0" VerticalAlignment="Top">
        	<Ellipse.Fill>
        		<RadialGradientBrush GradientOrigin="0.142,0.879" RadiusX="0.723">
        			<GradientStop Color="#99E4E4E4" Offset="0"/>
        			<GradientStop Color="#FFB4C2C0" Offset="1"/>
        		</RadialGradientBrush>
        	</Ellipse.Fill>
        </Ellipse>
        <ListBox x:Name="widgetBox" Visibility="Collapsed" Padding="15, 10"
			RenderTransformOrigin="0.5,0.5" ItemsSource="{Binding Widgets}"
			Style="{DynamicResource WidgetPanelStyle}" BorderBrush="#CC828790" 
            ItemContainerStyle="{DynamicResource WidgetContainerStyle}" 
            ItemTemplate="{DynamicResource WidgetBoxItemTemplate}"
            PreviewMouseLeftButtonDown="widgetBox_PreviewMouseLeftButtonDown"
            PreviewMouseMove="widgetBox_PreviewMouseMove" Background="#B2EDDBDB" Panel.ZIndex="998" Margin="0,8,8,0" Grid.Row="1" d:LayoutOverrides="GridBox" VerticalAlignment="Top" HorizontalAlignment="Right" MaxWidth="400">
            <ListBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="0" ScaleY="0" />
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform />
                </TransformGroup>
            </ListBox.RenderTransform>
        </ListBox>
        <controls:ImageButton 
				x:Name="widgetBoxButton" Content="ImageButton" 
				ImageMode="Switchover" Margin="0,8,8,28" Panel.ZIndex="1"
				Width="30" Height="30" d:LayoutOverrides="Width" 
				ImageSource="/Gymnastika.Widgets;component/Images/normal.png" 
                MouseOverImageSource="/Gymnastika.Widgets;component/Images/hover.png"
				MousePressedImageSource="/Gymnastika.Widgets;component/Images/pressed.png" HorizontalAlignment="Right" 
				Padding="0" HorizontalContentAlignment="Stretch" 
				VerticalContentAlignment="Stretch" Stretch="Fill" Click="OnWidgetBoxButton_Click" />
        <s:ScatterView x:Name="widgetContainer" Background="Transparent"
            widgets:WidgetContainerLocator.IsContainer="True" Grid.Row="0" 
            AllowDrop="True" HorizontalAlignment="Stretch" 
            Drop="OnWidgetDrop"
            VerticalAlignment="Stretch" Grid.RowSpan="2"/>
    </Grid>
</UserControl>
