<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:controls="clr-namespace:Gymnastika.Controls;assembly=Gymnastika.Controls" 
             xmlns:cov="clr-namespace:Gymnastika.Controls.Converters;assembly=Gymnastika.Controls" 
             xmlns:behaviors="clr-namespace:Gymnastika.Controls.Behaviors;assembly=Gymnastika.Controls" 
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:Custom="http://schemas.microsoft.com/surface/2008" x:Class="Gymnastika.App"
             >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Gymnastika.Infrastructure;component/Styles/ActionButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <cov:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <CornerRadius x:Key="DefaultInputBoxCornerRadius" BottomLeft="10" BottomRight="10" TopLeft="10" TopRight="10" />
            <SolidColorBrush x:Key="DefaultCaretBrush" Color="#FF898989"  />
            <Thickness x:Key="DefaultBorderThickness" Top="1.5" Right="1.5" Bottom="1.5" Left="1.5" />
            <!--<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                <GradientStop Color="#FFABADB3" Offset="0.05"/>
                <GradientStop Color="#FFE3E9EF" Offset="1"/>
                <GradientStop Color="#FF18181A" Offset="0.362"/>
            </LinearGradientBrush>-->
            <SolidColorBrush x:Key="TextBoxBorder" Color="#C6CABF" />

            <Style x:Key="WatermarkTextBoxStyle" TargetType="{x:Type controls:WatermarkTextBox}">
                <Setter Property="Cursor" Value="Arrow" />
                <Setter Property="Margin" Value="4, 8" />
                <Setter Property="CornerRadius" Value="{StaticResource DefaultInputBoxCornerRadius}" />
                <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
                <Setter Property="CaretBrush" Value="{StaticResource DefaultCaretBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="Height" Value="24"/>
            </Style>

            <Style x:Key="WatermarkPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="Cursor" Value="Arrow" />
                <Setter Property="Margin" Value="4, 8" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="FontFamily" Value="Times New Roman"/>
                <Setter Property="PasswordChar" Value="●"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="10, 0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="CaretBrush" Value="{StaticResource DefaultCaretBrush}"/>
                <Setter Property="Height" Value="24" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="Bd" Height="{TemplateBinding Height}" 
                                    CornerRadius="{StaticResource DefaultInputBoxCornerRadius}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Padding="0" Margin="0" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                    <TextBlock x:Name="watermarkBlock"
                                               Foreground="Silver" Margin="{TemplateBinding Padding}"  
                                               Background="Transparent" 
                                               Text="{Binding (behaviors:WatermarkBehavior.Watermark), Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PasswordBox}}}"
                                               HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                               FontFamily="微软雅黑" FontStyle="Italic" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="behaviors:WatermarkBehavior.IsEmpty" Value="true">
                                    <Setter Property="Visibility" Value="Visible" TargetName="watermarkBlock"  />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Custom:SurfaceButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="#33A4B4BD"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#7FFFFFFF" Offset="0"/>
                            <GradientStop Color="#0CFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="MinWidth" Value="30"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Press">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalOverlay">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
                                        <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Release">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalOverlay">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Glow">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ThicknessAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Glow">
                                        <SplineThicknessKeyFrame KeyTime="0" Value="0"/>
                                        <SplineThicknessKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="0:0:0.5" Value="1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid x:Name="NormalOverlay">
                                    <Ellipse x:Name="Shadow" Stretch="Fill" Stroke="#33000000" StrokeThickness="0,0,0,1" Margin="1,1,1,0" />

                                    <Ellipse x:Name="Base" Stretch="Fill" Fill="{TemplateBinding Background}" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" StrokeThickness="1">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                                <GradientStop Color="#66000000" Offset="0"/>
                                                <GradientStop Color="#33000000" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse x:Name="RenderOverlay" Stretch="Fill" Margin="2" Opacity="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
                                                <GradientStop Color="#26000000" Offset="0"/>
                                                <GradientStop Color="#4CFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                                <Ellipse x:Name="Glow" Fill="White" Stretch="Fill" Margin="1" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1">
                                </Ellipse>
                                <ContentPresenter x:Name="Content" 
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                  Content="{TemplateBinding Content}" 
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  RenderTransformOrigin="0.5,0.5" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform X="0" Y="-1"/>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Press}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Release}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="RenderOverlay" Value="#0CFFFFFF"/>
                                    <Setter Property="Stroke" TargetName="RenderOverlay" Value="#33FFFFFF"/>
                                    <Setter Property="Stroke" TargetName="Base" Value="#33000000"/>
                                    <Setter Property="Stroke" TargetName="Shadow" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="#A5333333"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="defaultButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="#89D9A8" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="IsDefault" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="8" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
